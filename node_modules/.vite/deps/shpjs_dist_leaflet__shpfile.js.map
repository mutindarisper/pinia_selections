{
  "version": 3,
  "sources": ["../../shpjs/dist/leaflet.shpfile.js", "dep:shpjs_dist_leaflet__shpfile"],
  "sourcesContent": ["'use strict';\r\n\r\n//  global cw, shp \r\n\r\nL.Shapefile = L.GeoJSON.extend({\r\n  options: {\r\n    importUrl: 'shp.js'\r\n  },\r\n\r\n  initialize: function(file, options) {\r\n    L.Util.setOptions(this, options);\r\n    if (typeof cw !== 'undefined') {\r\n      /*eslint-disable no-new-func*/\r\n      if (!options.isArrayBuffer) {\r\n        this.worker = cw(new Function('data', 'cb', 'importScripts(\"' + this.options.importUrl + '\");shp(data).then(cb);'));\r\n      } else {\r\n        this.worker = cw(new Function('data', 'importScripts(\"' + this.options.importUrl + '\"); return shp.parseZip(data);'));\r\n      }\r\n      /*eslint-enable no-new-func*/\r\n    }\r\n    L.GeoJSON.prototype.initialize.call(this, {\r\n      features: []\r\n    }, options);\r\n    this.addFileData(file);\r\n  },\r\n\r\n  addFileData: function(file) {\r\n    var self = this;\r\n    this.fire('data:loading');\r\n    if (typeof file !== 'string' && !('byteLength' in file)) {\r\n      var data = this.addData(file);\r\n      this.fire('data:loaded');\r\n      return data;\r\n    }\r\n    if (!this.worker) {\r\n      shp(file).then(function(data) {\r\n        self.addData(data);\r\n        self.fire('data:loaded');\r\n      }).catch(function(err) {\r\n        self.fire('data:error', err);\r\n      })\r\n      return this;\r\n    }\r\n    var promise;\r\n    if (this.options.isArrayBufer) {\r\n      promise = this.worker.data(file, [file]);\r\n    } else {\r\n      promise = this.worker.data(cw.makeUrl(file));\r\n    }\r\n\r\n    promise.then(function(data) {\r\n      self.addData(data);\r\n      self.fire('data:loaded');\r\n      self.worker.close();\r\n    }).then(function() {}, function(err) {\r\n      self.fire('data:error', err);\r\n    })\r\n    return this;\r\n  }\r\n});\r\n\r\nL.shapefile = function(a, b, c) {\r\n  return new L.Shapefile(a, b, c);\r\n};", "export default require(\"./node_modules/shpjs/dist/leaflet.shpfile.js\");"],
  "mappings": ";;;;;AAAA;AAAA;AAAA;AAIA,MAAE,YAAY,EAAE,QAAQ,OAAO;AAAA,MAC7B,SAAS;AAAA,QACP,WAAW;AAAA,MACb;AAAA,MAEA,YAAY,SAAS,MAAM,SAAS;AAClC,UAAE,KAAK,WAAW,MAAM,OAAO;AAC/B,YAAI,OAAO,OAAO,aAAa;AAE7B,cAAI,CAAC,QAAQ,eAAe;AAC1B,iBAAK,SAAS,GAAG,IAAI,SAAS,QAAQ,MAAM,oBAAoB,KAAK,QAAQ,YAAY,wBAAwB,CAAC;AAAA,UACpH,OAAO;AACL,iBAAK,SAAS,GAAG,IAAI,SAAS,QAAQ,oBAAoB,KAAK,QAAQ,YAAY,gCAAgC,CAAC;AAAA,UACtH;AAAA,QAEF;AACA,UAAE,QAAQ,UAAU,WAAW,KAAK,MAAM;AAAA,UACxC,UAAU,CAAC;AAAA,QACb,GAAG,OAAO;AACV,aAAK,YAAY,IAAI;AAAA,MACvB;AAAA,MAEA,aAAa,SAAS,MAAM;AAC1B,YAAI,OAAO;AACX,aAAK,KAAK,cAAc;AACxB,YAAI,OAAO,SAAS,YAAY,EAAE,gBAAgB,OAAO;AACvD,cAAI,OAAO,KAAK,QAAQ,IAAI;AAC5B,eAAK,KAAK,aAAa;AACvB,iBAAO;AAAA,QACT;AACA,YAAI,CAAC,KAAK,QAAQ;AAChB,cAAI,IAAI,EAAE,KAAK,SAASA,OAAM;AAC5B,iBAAK,QAAQA,KAAI;AACjB,iBAAK,KAAK,aAAa;AAAA,UACzB,CAAC,EAAE,MAAM,SAAS,KAAK;AACrB,iBAAK,KAAK,cAAc,GAAG;AAAA,UAC7B,CAAC;AACD,iBAAO;AAAA,QACT;AACA,YAAI;AACJ,YAAI,KAAK,QAAQ,cAAc;AAC7B,oBAAU,KAAK,OAAO,KAAK,MAAM,CAAC,IAAI,CAAC;AAAA,QACzC,OAAO;AACL,oBAAU,KAAK,OAAO,KAAK,GAAG,QAAQ,IAAI,CAAC;AAAA,QAC7C;AAEA,gBAAQ,KAAK,SAASA,OAAM;AAC1B,eAAK,QAAQA,KAAI;AACjB,eAAK,KAAK,aAAa;AACvB,eAAK,OAAO,MAAM;AAAA,QACpB,CAAC,EAAE,KAAK,WAAW;AAAA,QAAC,GAAG,SAAS,KAAK;AACnC,eAAK,KAAK,cAAc,GAAG;AAAA,QAC7B,CAAC;AACD,eAAO;AAAA,MACT;AAAA,IACF,CAAC;AAED,MAAE,YAAY,SAAS,GAAG,GAAG,GAAG;AAC9B,aAAO,IAAI,EAAE,UAAU,GAAG,GAAG,CAAC;AAAA,IAChC;AAAA;AAAA;;;AC/DA,IAAO,qCAAQ;",
  "names": ["data"]
}
